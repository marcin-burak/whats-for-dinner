@implements IDialogContentComponent
@rendermode InteractiveWebAssembly

<FluentDesignTheme @bind-Mode="@Mode" @bind-OfficeColor="@Color" StorageName="theme" />
<FluentDialogBody>
   <FluentStack Orientation="Orientation.Vertical" VerticalGap="20">
        <div>
            <FluentSelect Label="Motyw" Items="@(Enum.GetValues<DesignThemeModes>())" @bind-SelectedOption="@Mode">
                <OptionTemplate>
                    <FluentStack>
                        @switch (context)
                        {
                            case DesignThemeModes.Light:
                                <FluentIcon Value="@(new Icons.Filled.Size20.WeatherSunny())" />
                                break;

                            case DesignThemeModes.Dark:
                                <FluentIcon Value="@(new Icons.Filled.Size20.WeatherMoon())" />
                                break;

                            default:
                                <FluentIcon Value="@(new Icons.Filled.Size20.LaptopSettings())" />
                                break;
                        }
                        <FluentLabel>@context</FluentLabel>
                    </FluentStack>
                </OptionTemplate>
            </FluentSelect>
        </div>
        <div>
            <FluentSelect Label="Kolor" Items="@(Enum.GetValues<OfficeColor>().Cast<OfficeColor?>())" @bind-SelectedOption="@Color" Height="200px">
                <OptionTemplate>
                    <FluentStack>
                        <FluentIcon Value="@(new Icons.Filled.Size20.RectangleLandscape())" Color="Microsoft.FluentUI.AspNetCore.Components.Color.Custom" CustomColor="@(@context.ToAttributeValue() != "default" ? context.ToAttributeValue() : "#036ac4" )" />
                        <FluentLabel>@context</FluentLabel>
                    </FluentStack>
                </OptionTemplate>
            </FluentSelect>
        </div>
   </FluentStack>
</FluentDialogBody>

@code 
{
    public DesignThemeModes Mode { get; set; }

    public OfficeColor? Color { get; set; }
}
